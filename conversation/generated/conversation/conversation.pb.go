// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: protobuf/conversation/conversation.proto

package conversation

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConversationErrorCode int32

const (
	ConversationErrorCode_OK                    ConversationErrorCode = 0 // 成功
	ConversationErrorCode_UNKNOWN_ERROR         ConversationErrorCode = 1 // 未知错误
	ConversationErrorCode_INVALID_MESSAGE       ConversationErrorCode = 2 // 无效的消息
	ConversationErrorCode_SERIALIZATION_ERROR   ConversationErrorCode = 3 // 序列化错误
	ConversationErrorCode_DESERIALIZATION_ERROR ConversationErrorCode = 4 // 反序列化错误
	ConversationErrorCode_SOCKET_ERROR          ConversationErrorCode = 5 // Socket 错误
	ConversationErrorCode_MESSAGE_TOO_LARGE     ConversationErrorCode = 6 // 消息太大
)

// Enum value maps for ConversationErrorCode.
var (
	ConversationErrorCode_name = map[int32]string{
		0: "OK",
		1: "UNKNOWN_ERROR",
		2: "INVALID_MESSAGE",
		3: "SERIALIZATION_ERROR",
		4: "DESERIALIZATION_ERROR",
		5: "SOCKET_ERROR",
		6: "MESSAGE_TOO_LARGE",
	}
	ConversationErrorCode_value = map[string]int32{
		"OK":                    0,
		"UNKNOWN_ERROR":         1,
		"INVALID_MESSAGE":       2,
		"SERIALIZATION_ERROR":   3,
		"DESERIALIZATION_ERROR": 4,
		"SOCKET_ERROR":          5,
		"MESSAGE_TOO_LARGE":     6,
	}
)

func (x ConversationErrorCode) Enum() *ConversationErrorCode {
	p := new(ConversationErrorCode)
	*p = x
	return p
}

func (x ConversationErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConversationErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_conversation_conversation_proto_enumTypes[0].Descriptor()
}

func (ConversationErrorCode) Type() protoreflect.EnumType {
	return &file_protobuf_conversation_conversation_proto_enumTypes[0]
}

func (x ConversationErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConversationErrorCode.Descriptor instead.
func (ConversationErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_conversation_conversation_proto_rawDescGZIP(), []int{0}
}

type Conversation struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConversationId   string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`       // 对话 ID
	GroupLeader      string                 `protobuf:"bytes,2,opt,name=GroupLeader,proto3" json:"GroupLeader,omitempty"`                                   // 用户名
	Members          []string               `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`                                           // 成员列表
	Admins           []string               `protobuf:"bytes,4,rep,name=admins,proto3" json:"admins,omitempty"`                                             // 管理员列表
	ConversationName string                 `protobuf:"bytes,5,opt,name=conversation_name,json=conversationName,proto3" json:"conversation_name,omitempty"` // 对话名称
	ConversationType string                 `protobuf:"bytes,6,opt,name=conversation_type,json=conversationType,proto3" json:"conversation_type,omitempty"` // 对话类型
	Avatar           string                 `protobuf:"bytes,7,opt,name=Avatar,proto3" json:"Avatar,omitempty"`                                             // 对话头像
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_protobuf_conversation_conversation_proto_rawDescGZIP(), []int{0}
}

func (x *Conversation) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *Conversation) GetGroupLeader() string {
	if x != nil {
		return x.GroupLeader
	}
	return ""
}

func (x *Conversation) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Conversation) GetAdmins() []string {
	if x != nil {
		return x.Admins
	}
	return nil
}

func (x *Conversation) GetConversationName() string {
	if x != nil {
		return x.ConversationName
	}
	return ""
}

func (x *Conversation) GetConversationType() string {
	if x != nil {
		return x.ConversationType
	}
	return ""
}

func (x *Conversation) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type CreateSingleConversationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserName      string                 `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Member        string                 `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSingleConversationRequest) Reset() {
	*x = CreateSingleConversationRequest{}
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSingleConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleConversationRequest) ProtoMessage() {}

func (x *CreateSingleConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleConversationRequest.ProtoReflect.Descriptor instead.
func (*CreateSingleConversationRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_conversation_conversation_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSingleConversationRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CreateSingleConversationRequest) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

type CreateSingleConversationResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode        ConversationErrorCode  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=conversation.ConversationErrorCode" json:"error_code,omitempty"`
	ErrorMessage     string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ConversationInfo *Conversation          `protobuf:"bytes,3,opt,name=conversationInfo,proto3" json:"conversationInfo,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateSingleConversationResponse) Reset() {
	*x = CreateSingleConversationResponse{}
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSingleConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleConversationResponse) ProtoMessage() {}

func (x *CreateSingleConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleConversationResponse.ProtoReflect.Descriptor instead.
func (*CreateSingleConversationResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_conversation_conversation_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSingleConversationResponse) GetErrorCode() ConversationErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ConversationErrorCode_OK
}

func (x *CreateSingleConversationResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateSingleConversationResponse) GetConversationInfo() *Conversation {
	if x != nil {
		return x.ConversationInfo
	}
	return nil
}

type CreateGroupConversationRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	GroupLeader      string                 `protobuf:"bytes,1,opt,name=GroupLeader,proto3" json:"GroupLeader,omitempty"`
	Members          []string               `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	Admins           []string               `protobuf:"bytes,3,rep,name=admins,proto3" json:"admins,omitempty"`
	ConversationName string                 `protobuf:"bytes,4,opt,name=ConversationName,proto3" json:"ConversationName,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateGroupConversationRequest) Reset() {
	*x = CreateGroupConversationRequest{}
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupConversationRequest) ProtoMessage() {}

func (x *CreateGroupConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupConversationRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupConversationRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_conversation_conversation_proto_rawDescGZIP(), []int{3}
}

func (x *CreateGroupConversationRequest) GetGroupLeader() string {
	if x != nil {
		return x.GroupLeader
	}
	return ""
}

func (x *CreateGroupConversationRequest) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CreateGroupConversationRequest) GetAdmins() []string {
	if x != nil {
		return x.Admins
	}
	return nil
}

func (x *CreateGroupConversationRequest) GetConversationName() string {
	if x != nil {
		return x.ConversationName
	}
	return ""
}

type CreateGroupConversationResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode        ConversationErrorCode  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=conversation.ConversationErrorCode" json:"error_code,omitempty"`
	ErrorMessage     string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ConversationInfo *Conversation          `protobuf:"bytes,3,opt,name=conversationInfo,proto3" json:"conversationInfo,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateGroupConversationResponse) Reset() {
	*x = CreateGroupConversationResponse{}
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupConversationResponse) ProtoMessage() {}

func (x *CreateGroupConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupConversationResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupConversationResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_conversation_conversation_proto_rawDescGZIP(), []int{4}
}

func (x *CreateGroupConversationResponse) GetErrorCode() ConversationErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ConversationErrorCode_OK
}

func (x *CreateGroupConversationResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateGroupConversationResponse) GetConversationInfo() *Conversation {
	if x != nil {
		return x.ConversationInfo
	}
	return nil
}

type GetRecentConversationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserName      string                 `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Limit         int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` // 限制返回的对话数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecentConversationsRequest) Reset() {
	*x = GetRecentConversationsRequest{}
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecentConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentConversationsRequest) ProtoMessage() {}

func (x *GetRecentConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentConversationsRequest.ProtoReflect.Descriptor instead.
func (*GetRecentConversationsRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_conversation_conversation_proto_rawDescGZIP(), []int{5}
}

func (x *GetRecentConversationsRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetRecentConversationsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetRecentConversationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     ConversationErrorCode  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=conversation.ConversationErrorCode" json:"error_code,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Conversations []*Conversation        `protobuf:"bytes,3,rep,name=conversations,proto3" json:"conversations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecentConversationsResponse) Reset() {
	*x = GetRecentConversationsResponse{}
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecentConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentConversationsResponse) ProtoMessage() {}

func (x *GetRecentConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_conversation_conversation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentConversationsResponse.ProtoReflect.Descriptor instead.
func (*GetRecentConversationsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_conversation_conversation_proto_rawDescGZIP(), []int{6}
}

func (x *GetRecentConversationsResponse) GetErrorCode() ConversationErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ConversationErrorCode_OK
}

func (x *GetRecentConversationsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetRecentConversationsResponse) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

var File_protobuf_conversation_conversation_proto protoreflect.FileDescriptor

var file_protobuf_conversation_conversation_proto_rawDesc = string([]byte{
	0x0a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfd, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x56, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xd3, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x2a, 0x0a,
	0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x1f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x52,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2a, 0xa4, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45,
	0x52, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x49,
	0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05,
	0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x4f, 0x4f, 0x5f,
	0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x06, 0x32, 0xfd, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x79, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x73, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x2f, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_protobuf_conversation_conversation_proto_rawDescOnce sync.Once
	file_protobuf_conversation_conversation_proto_rawDescData []byte
)

func file_protobuf_conversation_conversation_proto_rawDescGZIP() []byte {
	file_protobuf_conversation_conversation_proto_rawDescOnce.Do(func() {
		file_protobuf_conversation_conversation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protobuf_conversation_conversation_proto_rawDesc), len(file_protobuf_conversation_conversation_proto_rawDesc)))
	})
	return file_protobuf_conversation_conversation_proto_rawDescData
}

var file_protobuf_conversation_conversation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protobuf_conversation_conversation_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_protobuf_conversation_conversation_proto_goTypes = []any{
	(ConversationErrorCode)(0),               // 0: conversation.ConversationErrorCode
	(*Conversation)(nil),                     // 1: conversation.Conversation
	(*CreateSingleConversationRequest)(nil),  // 2: conversation.CreateSingleConversationRequest
	(*CreateSingleConversationResponse)(nil), // 3: conversation.CreateSingleConversationResponse
	(*CreateGroupConversationRequest)(nil),   // 4: conversation.CreateGroupConversationRequest
	(*CreateGroupConversationResponse)(nil),  // 5: conversation.CreateGroupConversationResponse
	(*GetRecentConversationsRequest)(nil),    // 6: conversation.GetRecentConversationsRequest
	(*GetRecentConversationsResponse)(nil),   // 7: conversation.GetRecentConversationsResponse
}
var file_protobuf_conversation_conversation_proto_depIdxs = []int32{
	0, // 0: conversation.CreateSingleConversationResponse.error_code:type_name -> conversation.ConversationErrorCode
	1, // 1: conversation.CreateSingleConversationResponse.conversationInfo:type_name -> conversation.Conversation
	0, // 2: conversation.CreateGroupConversationResponse.error_code:type_name -> conversation.ConversationErrorCode
	1, // 3: conversation.CreateGroupConversationResponse.conversationInfo:type_name -> conversation.Conversation
	0, // 4: conversation.GetRecentConversationsResponse.error_code:type_name -> conversation.ConversationErrorCode
	1, // 5: conversation.GetRecentConversationsResponse.conversations:type_name -> conversation.Conversation
	2, // 6: conversation.ConversationService.CreateSingleConversation:input_type -> conversation.CreateSingleConversationRequest
	4, // 7: conversation.ConversationService.CreateGroupConversation:input_type -> conversation.CreateGroupConversationRequest
	6, // 8: conversation.ConversationService.GetRecentConversations:input_type -> conversation.GetRecentConversationsRequest
	3, // 9: conversation.ConversationService.CreateSingleConversation:output_type -> conversation.CreateSingleConversationResponse
	5, // 10: conversation.ConversationService.CreateGroupConversation:output_type -> conversation.CreateGroupConversationResponse
	7, // 11: conversation.ConversationService.GetRecentConversations:output_type -> conversation.GetRecentConversationsResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_protobuf_conversation_conversation_proto_init() }
func file_protobuf_conversation_conversation_proto_init() {
	if File_protobuf_conversation_conversation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protobuf_conversation_conversation_proto_rawDesc), len(file_protobuf_conversation_conversation_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_conversation_conversation_proto_goTypes,
		DependencyIndexes: file_protobuf_conversation_conversation_proto_depIdxs,
		EnumInfos:         file_protobuf_conversation_conversation_proto_enumTypes,
		MessageInfos:      file_protobuf_conversation_conversation_proto_msgTypes,
	}.Build()
	File_protobuf_conversation_conversation_proto = out.File
	file_protobuf_conversation_conversation_proto_goTypes = nil
	file_protobuf_conversation_conversation_proto_depIdxs = nil
}
