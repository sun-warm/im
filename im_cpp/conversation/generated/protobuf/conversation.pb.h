// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protobuf/conversation.proto
// Protobuf C++ Version: 5.29.3

#ifndef protobuf_2fconversation_2eproto_2epb_2eh
#define protobuf_2fconversation_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protobuf_2fconversation_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_protobuf_2fconversation_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_protobuf_2fconversation_2eproto;
class CreateGroupConversationRequest;
struct CreateGroupConversationRequestDefaultTypeInternal;
extern CreateGroupConversationRequestDefaultTypeInternal _CreateGroupConversationRequest_default_instance_;
class CreateGroupConversationResponse;
struct CreateGroupConversationResponseDefaultTypeInternal;
extern CreateGroupConversationResponseDefaultTypeInternal _CreateGroupConversationResponse_default_instance_;
class CreateSingleConversationRequest;
struct CreateSingleConversationRequestDefaultTypeInternal;
extern CreateSingleConversationRequestDefaultTypeInternal _CreateSingleConversationRequest_default_instance_;
class CreateSingleConversationResponse;
struct CreateSingleConversationResponseDefaultTypeInternal;
extern CreateSingleConversationResponseDefaultTypeInternal _CreateSingleConversationResponse_default_instance_;
class DeleteConversationRequest;
struct DeleteConversationRequestDefaultTypeInternal;
extern DeleteConversationRequestDefaultTypeInternal _DeleteConversationRequest_default_instance_;
class DeleteConversationResponse;
struct DeleteConversationResponseDefaultTypeInternal;
extern DeleteConversationResponseDefaultTypeInternal _DeleteConversationResponse_default_instance_;
class GetRecentConversationsRequest;
struct GetRecentConversationsRequestDefaultTypeInternal;
extern GetRecentConversationsRequestDefaultTypeInternal _GetRecentConversationsRequest_default_instance_;
class GetRecentConversationsResponse;
struct GetRecentConversationsResponseDefaultTypeInternal;
extern GetRecentConversationsResponseDefaultTypeInternal _GetRecentConversationsResponse_default_instance_;
class Request;
struct RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
struct ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum ErrorCode : int {
  OK = 0,
  UNKNOWN_ERROR = 1,
  INVALID_MESSAGE = 2,
  SERIALIZATION_ERROR = 3,
  DESERIALIZATION_ERROR = 4,
  SOCKET_ERROR = 5,
  ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ErrorCode_IsValid(int value);
extern const uint32_t ErrorCode_internal_data_[];
constexpr ErrorCode ErrorCode_MIN = static_cast<ErrorCode>(0);
constexpr ErrorCode ErrorCode_MAX = static_cast<ErrorCode>(5);
constexpr int ErrorCode_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
ErrorCode_descriptor();
template <typename T>
const std::string& ErrorCode_Name(T value) {
  static_assert(std::is_same<T, ErrorCode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ErrorCode_Name().");
  return ErrorCode_Name(static_cast<ErrorCode>(value));
}
template <>
inline const std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ErrorCode_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool ErrorCode_Parse(absl::string_view name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
      ErrorCode_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class GetRecentConversationsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:GetRecentConversationsResponse) */ {
 public:
  inline GetRecentConversationsResponse() : GetRecentConversationsResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetRecentConversationsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetRecentConversationsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRecentConversationsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRecentConversationsResponse(const GetRecentConversationsResponse& from) : GetRecentConversationsResponse(nullptr, from) {}
  inline GetRecentConversationsResponse(GetRecentConversationsResponse&& from) noexcept
      : GetRecentConversationsResponse(nullptr, std::move(from)) {}
  inline GetRecentConversationsResponse& operator=(const GetRecentConversationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRecentConversationsResponse& operator=(GetRecentConversationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRecentConversationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRecentConversationsResponse* internal_default_instance() {
    return reinterpret_cast<const GetRecentConversationsResponse*>(
        &_GetRecentConversationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GetRecentConversationsResponse& a, GetRecentConversationsResponse& b) { a.Swap(&b); }
  inline void Swap(GetRecentConversationsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRecentConversationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRecentConversationsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetRecentConversationsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetRecentConversationsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetRecentConversationsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GetRecentConversationsResponse"; }

 protected:
  explicit GetRecentConversationsResponse(::google::protobuf::Arena* arena);
  GetRecentConversationsResponse(::google::protobuf::Arena* arena, const GetRecentConversationsResponse& from);
  GetRecentConversationsResponse(::google::protobuf::Arena* arena, GetRecentConversationsResponse&& from) noexcept
      : GetRecentConversationsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:GetRecentConversationsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRecentConversationsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_protobuf_2fconversation_2eproto;
};
// -------------------------------------------------------------------

class GetRecentConversationsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:GetRecentConversationsRequest) */ {
 public:
  inline GetRecentConversationsRequest() : GetRecentConversationsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetRecentConversationsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetRecentConversationsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRecentConversationsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRecentConversationsRequest(const GetRecentConversationsRequest& from) : GetRecentConversationsRequest(nullptr, from) {}
  inline GetRecentConversationsRequest(GetRecentConversationsRequest&& from) noexcept
      : GetRecentConversationsRequest(nullptr, std::move(from)) {}
  inline GetRecentConversationsRequest& operator=(const GetRecentConversationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRecentConversationsRequest& operator=(GetRecentConversationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRecentConversationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRecentConversationsRequest* internal_default_instance() {
    return reinterpret_cast<const GetRecentConversationsRequest*>(
        &_GetRecentConversationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetRecentConversationsRequest& a, GetRecentConversationsRequest& b) { a.Swap(&b); }
  inline void Swap(GetRecentConversationsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRecentConversationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRecentConversationsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetRecentConversationsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetRecentConversationsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetRecentConversationsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GetRecentConversationsRequest"; }

 protected:
  explicit GetRecentConversationsRequest(::google::protobuf::Arena* arena);
  GetRecentConversationsRequest(::google::protobuf::Arena* arena, const GetRecentConversationsRequest& from);
  GetRecentConversationsRequest(::google::protobuf::Arena* arena, GetRecentConversationsRequest&& from) noexcept
      : GetRecentConversationsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:GetRecentConversationsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRecentConversationsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_protobuf_2fconversation_2eproto;
};
// -------------------------------------------------------------------

class DeleteConversationResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DeleteConversationResponse) */ {
 public:
  inline DeleteConversationResponse() : DeleteConversationResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteConversationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteConversationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteConversationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteConversationResponse(const DeleteConversationResponse& from) : DeleteConversationResponse(nullptr, from) {}
  inline DeleteConversationResponse(DeleteConversationResponse&& from) noexcept
      : DeleteConversationResponse(nullptr, std::move(from)) {}
  inline DeleteConversationResponse& operator=(const DeleteConversationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteConversationResponse& operator=(DeleteConversationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteConversationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteConversationResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteConversationResponse*>(
        &_DeleteConversationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(DeleteConversationResponse& a, DeleteConversationResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteConversationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteConversationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteConversationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteConversationResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteConversationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteConversationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DeleteConversationResponse"; }

 protected:
  explicit DeleteConversationResponse(::google::protobuf::Arena* arena);
  DeleteConversationResponse(::google::protobuf::Arena* arena, const DeleteConversationResponse& from);
  DeleteConversationResponse(::google::protobuf::Arena* arena, DeleteConversationResponse&& from) noexcept
      : DeleteConversationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DeleteConversationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteConversationResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_protobuf_2fconversation_2eproto;
};
// -------------------------------------------------------------------

class DeleteConversationRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:DeleteConversationRequest) */ {
 public:
  inline DeleteConversationRequest() : DeleteConversationRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteConversationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteConversationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteConversationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteConversationRequest(const DeleteConversationRequest& from) : DeleteConversationRequest(nullptr, from) {}
  inline DeleteConversationRequest(DeleteConversationRequest&& from) noexcept
      : DeleteConversationRequest(nullptr, std::move(from)) {}
  inline DeleteConversationRequest& operator=(const DeleteConversationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteConversationRequest& operator=(DeleteConversationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteConversationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteConversationRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteConversationRequest*>(
        &_DeleteConversationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(DeleteConversationRequest& a, DeleteConversationRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteConversationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteConversationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteConversationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteConversationRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteConversationRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteConversationRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DeleteConversationRequest"; }

 protected:
  explicit DeleteConversationRequest(::google::protobuf::Arena* arena);
  DeleteConversationRequest(::google::protobuf::Arena* arena, const DeleteConversationRequest& from);
  DeleteConversationRequest(::google::protobuf::Arena* arena, DeleteConversationRequest&& from) noexcept
      : DeleteConversationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:DeleteConversationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteConversationRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_protobuf_2fconversation_2eproto;
};
// -------------------------------------------------------------------

class CreateSingleConversationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CreateSingleConversationResponse) */ {
 public:
  inline CreateSingleConversationResponse() : CreateSingleConversationResponse(nullptr) {}
  ~CreateSingleConversationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSingleConversationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSingleConversationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSingleConversationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSingleConversationResponse(const CreateSingleConversationResponse& from) : CreateSingleConversationResponse(nullptr, from) {}
  inline CreateSingleConversationResponse(CreateSingleConversationResponse&& from) noexcept
      : CreateSingleConversationResponse(nullptr, std::move(from)) {}
  inline CreateSingleConversationResponse& operator=(const CreateSingleConversationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSingleConversationResponse& operator=(CreateSingleConversationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSingleConversationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSingleConversationResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSingleConversationResponse*>(
        &_CreateSingleConversationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CreateSingleConversationResponse& a, CreateSingleConversationResponse& b) { a.Swap(&b); }
  inline void Swap(CreateSingleConversationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSingleConversationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSingleConversationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSingleConversationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSingleConversationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSingleConversationResponse& from) { CreateSingleConversationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSingleConversationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CreateSingleConversationResponse"; }

 protected:
  explicit CreateSingleConversationResponse(::google::protobuf::Arena* arena);
  CreateSingleConversationResponse(::google::protobuf::Arena* arena, const CreateSingleConversationResponse& from);
  CreateSingleConversationResponse(::google::protobuf::Arena* arena, CreateSingleConversationResponse&& from) noexcept
      : CreateSingleConversationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConversationIdFieldNumber = 1,
    kErrorCodeFieldNumber = 2,
  };
  // string conversation_id = 1;
  void clear_conversation_id() ;
  const std::string& conversation_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_conversation_id(Arg_&& arg, Args_... args);
  std::string* mutable_conversation_id();
  PROTOBUF_NODISCARD std::string* release_conversation_id();
  void set_allocated_conversation_id(std::string* value);

  private:
  const std::string& _internal_conversation_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_id(
      const std::string& value);
  std::string* _internal_mutable_conversation_id();

  public:
  // .ErrorCode error_code = 2;
  void clear_error_code() ;
  ::ErrorCode error_code() const;
  void set_error_code(::ErrorCode value);

  private:
  ::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::ErrorCode value);

  public:
  // @@protoc_insertion_point(class_scope:CreateSingleConversationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSingleConversationResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr conversation_id_;
    int error_code_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fconversation_2eproto;
};
// -------------------------------------------------------------------

class CreateSingleConversationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CreateSingleConversationRequest) */ {
 public:
  inline CreateSingleConversationRequest() : CreateSingleConversationRequest(nullptr) {}
  ~CreateSingleConversationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSingleConversationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSingleConversationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSingleConversationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSingleConversationRequest(const CreateSingleConversationRequest& from) : CreateSingleConversationRequest(nullptr, from) {}
  inline CreateSingleConversationRequest(CreateSingleConversationRequest&& from) noexcept
      : CreateSingleConversationRequest(nullptr, std::move(from)) {}
  inline CreateSingleConversationRequest& operator=(const CreateSingleConversationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSingleConversationRequest& operator=(CreateSingleConversationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSingleConversationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSingleConversationRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSingleConversationRequest*>(
        &_CreateSingleConversationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CreateSingleConversationRequest& a, CreateSingleConversationRequest& b) { a.Swap(&b); }
  inline void Swap(CreateSingleConversationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSingleConversationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSingleConversationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSingleConversationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSingleConversationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSingleConversationRequest& from) { CreateSingleConversationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSingleConversationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CreateSingleConversationRequest"; }

 protected:
  explicit CreateSingleConversationRequest(::google::protobuf::Arena* arena);
  CreateSingleConversationRequest(::google::protobuf::Arena* arena, const CreateSingleConversationRequest& from);
  CreateSingleConversationRequest(::google::protobuf::Arena* arena, CreateSingleConversationRequest&& from) noexcept
      : CreateSingleConversationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatorUserFieldNumber = 1,
    kOtherUsersFieldNumber = 2,
    kConversationNameFieldNumber = 3,
  };
  // string creator_user = 1;
  void clear_creator_user() ;
  const std::string& creator_user() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creator_user(Arg_&& arg, Args_... args);
  std::string* mutable_creator_user();
  PROTOBUF_NODISCARD std::string* release_creator_user();
  void set_allocated_creator_user(std::string* value);

  private:
  const std::string& _internal_creator_user() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creator_user(
      const std::string& value);
  std::string* _internal_mutable_creator_user();

  public:
  // string other_users = 2;
  void clear_other_users() ;
  const std::string& other_users() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_other_users(Arg_&& arg, Args_... args);
  std::string* mutable_other_users();
  PROTOBUF_NODISCARD std::string* release_other_users();
  void set_allocated_other_users(std::string* value);

  private:
  const std::string& _internal_other_users() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_other_users(
      const std::string& value);
  std::string* _internal_mutable_other_users();

  public:
  // string conversation_name = 3;
  void clear_conversation_name() ;
  const std::string& conversation_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_conversation_name(Arg_&& arg, Args_... args);
  std::string* mutable_conversation_name();
  PROTOBUF_NODISCARD std::string* release_conversation_name();
  void set_allocated_conversation_name(std::string* value);

  private:
  const std::string& _internal_conversation_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_name(
      const std::string& value);
  std::string* _internal_mutable_conversation_name();

  public:
  // @@protoc_insertion_point(class_scope:CreateSingleConversationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      80, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSingleConversationRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr creator_user_;
    ::google::protobuf::internal::ArenaStringPtr other_users_;
    ::google::protobuf::internal::ArenaStringPtr conversation_name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fconversation_2eproto;
};
// -------------------------------------------------------------------

class CreateGroupConversationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CreateGroupConversationResponse) */ {
 public:
  inline CreateGroupConversationResponse() : CreateGroupConversationResponse(nullptr) {}
  ~CreateGroupConversationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateGroupConversationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateGroupConversationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateGroupConversationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateGroupConversationResponse(const CreateGroupConversationResponse& from) : CreateGroupConversationResponse(nullptr, from) {}
  inline CreateGroupConversationResponse(CreateGroupConversationResponse&& from) noexcept
      : CreateGroupConversationResponse(nullptr, std::move(from)) {}
  inline CreateGroupConversationResponse& operator=(const CreateGroupConversationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateGroupConversationResponse& operator=(CreateGroupConversationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateGroupConversationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateGroupConversationResponse* internal_default_instance() {
    return reinterpret_cast<const CreateGroupConversationResponse*>(
        &_CreateGroupConversationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CreateGroupConversationResponse& a, CreateGroupConversationResponse& b) { a.Swap(&b); }
  inline void Swap(CreateGroupConversationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateGroupConversationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateGroupConversationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateGroupConversationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateGroupConversationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateGroupConversationResponse& from) { CreateGroupConversationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateGroupConversationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CreateGroupConversationResponse"; }

 protected:
  explicit CreateGroupConversationResponse(::google::protobuf::Arena* arena);
  CreateGroupConversationResponse(::google::protobuf::Arena* arena, const CreateGroupConversationResponse& from);
  CreateGroupConversationResponse(::google::protobuf::Arena* arena, CreateGroupConversationResponse&& from) noexcept
      : CreateGroupConversationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConversationIdFieldNumber = 1,
    kErrorCodeFieldNumber = 2,
  };
  // string conversation_id = 1;
  void clear_conversation_id() ;
  const std::string& conversation_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_conversation_id(Arg_&& arg, Args_... args);
  std::string* mutable_conversation_id();
  PROTOBUF_NODISCARD std::string* release_conversation_id();
  void set_allocated_conversation_id(std::string* value);

  private:
  const std::string& _internal_conversation_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conversation_id(
      const std::string& value);
  std::string* _internal_mutable_conversation_id();

  public:
  // .ErrorCode error_code = 2;
  void clear_error_code() ;
  ::ErrorCode error_code() const;
  void set_error_code(::ErrorCode value);

  private:
  ::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::ErrorCode value);

  public:
  // @@protoc_insertion_point(class_scope:CreateGroupConversationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateGroupConversationResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr conversation_id_;
    int error_code_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fconversation_2eproto;
};
// -------------------------------------------------------------------

class CreateGroupConversationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CreateGroupConversationRequest) */ {
 public:
  inline CreateGroupConversationRequest() : CreateGroupConversationRequest(nullptr) {}
  ~CreateGroupConversationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateGroupConversationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateGroupConversationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateGroupConversationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateGroupConversationRequest(const CreateGroupConversationRequest& from) : CreateGroupConversationRequest(nullptr, from) {}
  inline CreateGroupConversationRequest(CreateGroupConversationRequest&& from) noexcept
      : CreateGroupConversationRequest(nullptr, std::move(from)) {}
  inline CreateGroupConversationRequest& operator=(const CreateGroupConversationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateGroupConversationRequest& operator=(CreateGroupConversationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateGroupConversationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateGroupConversationRequest* internal_default_instance() {
    return reinterpret_cast<const CreateGroupConversationRequest*>(
        &_CreateGroupConversationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CreateGroupConversationRequest& a, CreateGroupConversationRequest& b) { a.Swap(&b); }
  inline void Swap(CreateGroupConversationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateGroupConversationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateGroupConversationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateGroupConversationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateGroupConversationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateGroupConversationRequest& from) { CreateGroupConversationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateGroupConversationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CreateGroupConversationRequest"; }

 protected:
  explicit CreateGroupConversationRequest(::google::protobuf::Arena* arena);
  CreateGroupConversationRequest(::google::protobuf::Arena* arena, const CreateGroupConversationRequest& from);
  CreateGroupConversationRequest(::google::protobuf::Arena* arena, CreateGroupConversationRequest&& from) noexcept
      : CreateGroupConversationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOtherUsersFieldNumber = 2,
    kCreatorUserFieldNumber = 1,
  };
  // repeated string other_users = 2;
  int other_users_size() const;
  private:
  int _internal_other_users_size() const;

  public:
  void clear_other_users() ;
  const std::string& other_users(int index) const;
  std::string* mutable_other_users(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_other_users(int index, Arg_&& value, Args_... args);
  std::string* add_other_users();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_other_users(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& other_users() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_other_users();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_other_users() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_other_users();

  public:
  // string creator_user = 1;
  void clear_creator_user() ;
  const std::string& creator_user() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creator_user(Arg_&& arg, Args_... args);
  std::string* mutable_creator_user();
  PROTOBUF_NODISCARD std::string* release_creator_user();
  void set_allocated_creator_user(std::string* value);

  private:
  const std::string& _internal_creator_user() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creator_user(
      const std::string& value);
  std::string* _internal_mutable_creator_user();

  public:
  // @@protoc_insertion_point(class_scope:CreateGroupConversationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateGroupConversationRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> other_users_;
    ::google::protobuf::internal::ArenaStringPtr creator_user_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fconversation_2eproto;
};
// -------------------------------------------------------------------

class Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Response) */ {
 public:
  inline Response() : Response(nullptr) {}
  ~Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Response* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Response(
      ::google::protobuf::internal::ConstantInitialized);

  inline Response(const Response& from) : Response(nullptr, from) {}
  inline Response(Response&& from) noexcept
      : Response(nullptr, std::move(from)) {}
  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline Response& operator=(Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Response& default_instance() {
    return *internal_default_instance();
  }
  enum ResponseTypeCase {
    kCreateSingleConversationResponse = 1,
    kCreateGroupConversationResponse = 2,
    kDeleteConversationResponse = 3,
    kGetRecentConvertsationsResponse = 4,
    RESPONSE_TYPE_NOT_SET = 0,
  };
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
        &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Response& a, Response& b) { a.Swap(&b); }
  inline void Swap(Response* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Response* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Response& from) { Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Response* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Response"; }

 protected:
  explicit Response(::google::protobuf::Arena* arena);
  Response(::google::protobuf::Arena* arena, const Response& from);
  Response(::google::protobuf::Arena* arena, Response&& from) noexcept
      : Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreateSingleConversationResponseFieldNumber = 1,
    kCreateGroupConversationResponseFieldNumber = 2,
    kDeleteConversationResponseFieldNumber = 3,
    kGetRecentConvertsationsResponseFieldNumber = 4,
  };
  // .CreateSingleConversationResponse create_single_conversation_response = 1;
  bool has_create_single_conversation_response() const;
  private:
  bool _internal_has_create_single_conversation_response() const;

  public:
  void clear_create_single_conversation_response() ;
  const ::CreateSingleConversationResponse& create_single_conversation_response() const;
  PROTOBUF_NODISCARD ::CreateSingleConversationResponse* release_create_single_conversation_response();
  ::CreateSingleConversationResponse* mutable_create_single_conversation_response();
  void set_allocated_create_single_conversation_response(::CreateSingleConversationResponse* value);
  void unsafe_arena_set_allocated_create_single_conversation_response(::CreateSingleConversationResponse* value);
  ::CreateSingleConversationResponse* unsafe_arena_release_create_single_conversation_response();

  private:
  const ::CreateSingleConversationResponse& _internal_create_single_conversation_response() const;
  ::CreateSingleConversationResponse* _internal_mutable_create_single_conversation_response();

  public:
  // .CreateGroupConversationResponse create_group_conversation_response = 2;
  bool has_create_group_conversation_response() const;
  private:
  bool _internal_has_create_group_conversation_response() const;

  public:
  void clear_create_group_conversation_response() ;
  const ::CreateGroupConversationResponse& create_group_conversation_response() const;
  PROTOBUF_NODISCARD ::CreateGroupConversationResponse* release_create_group_conversation_response();
  ::CreateGroupConversationResponse* mutable_create_group_conversation_response();
  void set_allocated_create_group_conversation_response(::CreateGroupConversationResponse* value);
  void unsafe_arena_set_allocated_create_group_conversation_response(::CreateGroupConversationResponse* value);
  ::CreateGroupConversationResponse* unsafe_arena_release_create_group_conversation_response();

  private:
  const ::CreateGroupConversationResponse& _internal_create_group_conversation_response() const;
  ::CreateGroupConversationResponse* _internal_mutable_create_group_conversation_response();

  public:
  // .DeleteConversationResponse delete_conversation_response = 3;
  bool has_delete_conversation_response() const;
  private:
  bool _internal_has_delete_conversation_response() const;

  public:
  void clear_delete_conversation_response() ;
  const ::DeleteConversationResponse& delete_conversation_response() const;
  PROTOBUF_NODISCARD ::DeleteConversationResponse* release_delete_conversation_response();
  ::DeleteConversationResponse* mutable_delete_conversation_response();
  void set_allocated_delete_conversation_response(::DeleteConversationResponse* value);
  void unsafe_arena_set_allocated_delete_conversation_response(::DeleteConversationResponse* value);
  ::DeleteConversationResponse* unsafe_arena_release_delete_conversation_response();

  private:
  const ::DeleteConversationResponse& _internal_delete_conversation_response() const;
  ::DeleteConversationResponse* _internal_mutable_delete_conversation_response();

  public:
  // .GetRecentConversationsResponse get_recent_convertsations_response = 4;
  bool has_get_recent_convertsations_response() const;
  private:
  bool _internal_has_get_recent_convertsations_response() const;

  public:
  void clear_get_recent_convertsations_response() ;
  const ::GetRecentConversationsResponse& get_recent_convertsations_response() const;
  PROTOBUF_NODISCARD ::GetRecentConversationsResponse* release_get_recent_convertsations_response();
  ::GetRecentConversationsResponse* mutable_get_recent_convertsations_response();
  void set_allocated_get_recent_convertsations_response(::GetRecentConversationsResponse* value);
  void unsafe_arena_set_allocated_get_recent_convertsations_response(::GetRecentConversationsResponse* value);
  ::GetRecentConversationsResponse* unsafe_arena_release_get_recent_convertsations_response();

  private:
  const ::GetRecentConversationsResponse& _internal_get_recent_convertsations_response() const;
  ::GetRecentConversationsResponse* _internal_mutable_get_recent_convertsations_response();

  public:
  void clear_response_type();
  ResponseTypeCase response_type_case() const;
  // @@protoc_insertion_point(class_scope:Response)
 private:
  class _Internal;
  void set_has_create_single_conversation_response();
  void set_has_create_group_conversation_response();
  void set_has_delete_conversation_response();
  void set_has_get_recent_convertsations_response();
  inline bool has_response_type() const;
  inline void clear_has_response_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Response& from_msg);
    union ResponseTypeUnion {
      constexpr ResponseTypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::CreateSingleConversationResponse* create_single_conversation_response_;
      ::CreateGroupConversationResponse* create_group_conversation_response_;
      ::DeleteConversationResponse* delete_conversation_response_;
      ::GetRecentConversationsResponse* get_recent_convertsations_response_;
    } response_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fconversation_2eproto;
};
// -------------------------------------------------------------------

class Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Request) */ {
 public:
  inline Request() : Request(nullptr) {}
  ~Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Request* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Request(
      ::google::protobuf::internal::ConstantInitialized);

  inline Request(const Request& from) : Request(nullptr, from) {}
  inline Request(Request&& from) noexcept
      : Request(nullptr, std::move(from)) {}
  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline Request& operator=(Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Request& default_instance() {
    return *internal_default_instance();
  }
  enum RequestTypeCase {
    kCreateSingleConversationRequest = 1,
    kCreateGroupConvertsationRequest = 2,
    kDeleteConversationRequest = 3,
    kGetRecentConvertsationsRequest = 4,
    REQUEST_TYPE_NOT_SET = 0,
  };
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
        &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Request& a, Request& b) { a.Swap(&b); }
  inline void Swap(Request* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Request* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Request& from) { Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Request* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Request"; }

 protected:
  explicit Request(::google::protobuf::Arena* arena);
  Request(::google::protobuf::Arena* arena, const Request& from);
  Request(::google::protobuf::Arena* arena, Request&& from) noexcept
      : Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreateSingleConversationRequestFieldNumber = 1,
    kCreateGroupConvertsationRequestFieldNumber = 2,
    kDeleteConversationRequestFieldNumber = 3,
    kGetRecentConvertsationsRequestFieldNumber = 4,
  };
  // .CreateSingleConversationRequest create_single_conversation_request = 1;
  bool has_create_single_conversation_request() const;
  private:
  bool _internal_has_create_single_conversation_request() const;

  public:
  void clear_create_single_conversation_request() ;
  const ::CreateSingleConversationRequest& create_single_conversation_request() const;
  PROTOBUF_NODISCARD ::CreateSingleConversationRequest* release_create_single_conversation_request();
  ::CreateSingleConversationRequest* mutable_create_single_conversation_request();
  void set_allocated_create_single_conversation_request(::CreateSingleConversationRequest* value);
  void unsafe_arena_set_allocated_create_single_conversation_request(::CreateSingleConversationRequest* value);
  ::CreateSingleConversationRequest* unsafe_arena_release_create_single_conversation_request();

  private:
  const ::CreateSingleConversationRequest& _internal_create_single_conversation_request() const;
  ::CreateSingleConversationRequest* _internal_mutable_create_single_conversation_request();

  public:
  // .CreateGroupConversationRequest create_group_convertsation_request = 2;
  bool has_create_group_convertsation_request() const;
  private:
  bool _internal_has_create_group_convertsation_request() const;

  public:
  void clear_create_group_convertsation_request() ;
  const ::CreateGroupConversationRequest& create_group_convertsation_request() const;
  PROTOBUF_NODISCARD ::CreateGroupConversationRequest* release_create_group_convertsation_request();
  ::CreateGroupConversationRequest* mutable_create_group_convertsation_request();
  void set_allocated_create_group_convertsation_request(::CreateGroupConversationRequest* value);
  void unsafe_arena_set_allocated_create_group_convertsation_request(::CreateGroupConversationRequest* value);
  ::CreateGroupConversationRequest* unsafe_arena_release_create_group_convertsation_request();

  private:
  const ::CreateGroupConversationRequest& _internal_create_group_convertsation_request() const;
  ::CreateGroupConversationRequest* _internal_mutable_create_group_convertsation_request();

  public:
  // .DeleteConversationRequest delete_conversation_request = 3;
  bool has_delete_conversation_request() const;
  private:
  bool _internal_has_delete_conversation_request() const;

  public:
  void clear_delete_conversation_request() ;
  const ::DeleteConversationRequest& delete_conversation_request() const;
  PROTOBUF_NODISCARD ::DeleteConversationRequest* release_delete_conversation_request();
  ::DeleteConversationRequest* mutable_delete_conversation_request();
  void set_allocated_delete_conversation_request(::DeleteConversationRequest* value);
  void unsafe_arena_set_allocated_delete_conversation_request(::DeleteConversationRequest* value);
  ::DeleteConversationRequest* unsafe_arena_release_delete_conversation_request();

  private:
  const ::DeleteConversationRequest& _internal_delete_conversation_request() const;
  ::DeleteConversationRequest* _internal_mutable_delete_conversation_request();

  public:
  // .GetRecentConversationsRequest get_recent_convertsations_request = 4;
  bool has_get_recent_convertsations_request() const;
  private:
  bool _internal_has_get_recent_convertsations_request() const;

  public:
  void clear_get_recent_convertsations_request() ;
  const ::GetRecentConversationsRequest& get_recent_convertsations_request() const;
  PROTOBUF_NODISCARD ::GetRecentConversationsRequest* release_get_recent_convertsations_request();
  ::GetRecentConversationsRequest* mutable_get_recent_convertsations_request();
  void set_allocated_get_recent_convertsations_request(::GetRecentConversationsRequest* value);
  void unsafe_arena_set_allocated_get_recent_convertsations_request(::GetRecentConversationsRequest* value);
  ::GetRecentConversationsRequest* unsafe_arena_release_get_recent_convertsations_request();

  private:
  const ::GetRecentConversationsRequest& _internal_get_recent_convertsations_request() const;
  ::GetRecentConversationsRequest* _internal_mutable_get_recent_convertsations_request();

  public:
  void clear_request_type();
  RequestTypeCase request_type_case() const;
  // @@protoc_insertion_point(class_scope:Request)
 private:
  class _Internal;
  void set_has_create_single_conversation_request();
  void set_has_create_group_convertsation_request();
  void set_has_delete_conversation_request();
  void set_has_get_recent_convertsations_request();
  inline bool has_request_type() const;
  inline void clear_has_request_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Request& from_msg);
    union RequestTypeUnion {
      constexpr RequestTypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::CreateSingleConversationRequest* create_single_conversation_request_;
      ::CreateGroupConversationRequest* create_group_convertsation_request_;
      ::DeleteConversationRequest* delete_conversation_request_;
      ::GetRecentConversationsRequest* get_recent_convertsations_request_;
    } request_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fconversation_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CreateSingleConversationRequest

// string creator_user = 1;
inline void CreateSingleConversationRequest::clear_creator_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_user_.ClearToEmpty();
}
inline const std::string& CreateSingleConversationRequest::creator_user() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CreateSingleConversationRequest.creator_user)
  return _internal_creator_user();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateSingleConversationRequest::set_creator_user(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_user_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CreateSingleConversationRequest.creator_user)
}
inline std::string* CreateSingleConversationRequest::mutable_creator_user() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creator_user();
  // @@protoc_insertion_point(field_mutable:CreateSingleConversationRequest.creator_user)
  return _s;
}
inline const std::string& CreateSingleConversationRequest::_internal_creator_user() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creator_user_.Get();
}
inline void CreateSingleConversationRequest::_internal_set_creator_user(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_user_.Set(value, GetArena());
}
inline std::string* CreateSingleConversationRequest::_internal_mutable_creator_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creator_user_.Mutable( GetArena());
}
inline std::string* CreateSingleConversationRequest::release_creator_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CreateSingleConversationRequest.creator_user)
  return _impl_.creator_user_.Release();
}
inline void CreateSingleConversationRequest::set_allocated_creator_user(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_user_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creator_user_.IsDefault()) {
    _impl_.creator_user_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CreateSingleConversationRequest.creator_user)
}

// string other_users = 2;
inline void CreateSingleConversationRequest::clear_other_users() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_users_.ClearToEmpty();
}
inline const std::string& CreateSingleConversationRequest::other_users() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CreateSingleConversationRequest.other_users)
  return _internal_other_users();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateSingleConversationRequest::set_other_users(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_users_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CreateSingleConversationRequest.other_users)
}
inline std::string* CreateSingleConversationRequest::mutable_other_users() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_other_users();
  // @@protoc_insertion_point(field_mutable:CreateSingleConversationRequest.other_users)
  return _s;
}
inline const std::string& CreateSingleConversationRequest::_internal_other_users() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.other_users_.Get();
}
inline void CreateSingleConversationRequest::_internal_set_other_users(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_users_.Set(value, GetArena());
}
inline std::string* CreateSingleConversationRequest::_internal_mutable_other_users() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.other_users_.Mutable( GetArena());
}
inline std::string* CreateSingleConversationRequest::release_other_users() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CreateSingleConversationRequest.other_users)
  return _impl_.other_users_.Release();
}
inline void CreateSingleConversationRequest::set_allocated_other_users(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_users_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.other_users_.IsDefault()) {
    _impl_.other_users_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CreateSingleConversationRequest.other_users)
}

// string conversation_name = 3;
inline void CreateSingleConversationRequest::clear_conversation_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_name_.ClearToEmpty();
}
inline const std::string& CreateSingleConversationRequest::conversation_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CreateSingleConversationRequest.conversation_name)
  return _internal_conversation_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateSingleConversationRequest::set_conversation_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CreateSingleConversationRequest.conversation_name)
}
inline std::string* CreateSingleConversationRequest::mutable_conversation_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_conversation_name();
  // @@protoc_insertion_point(field_mutable:CreateSingleConversationRequest.conversation_name)
  return _s;
}
inline const std::string& CreateSingleConversationRequest::_internal_conversation_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_name_.Get();
}
inline void CreateSingleConversationRequest::_internal_set_conversation_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_name_.Set(value, GetArena());
}
inline std::string* CreateSingleConversationRequest::_internal_mutable_conversation_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.conversation_name_.Mutable( GetArena());
}
inline std::string* CreateSingleConversationRequest::release_conversation_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CreateSingleConversationRequest.conversation_name)
  return _impl_.conversation_name_.Release();
}
inline void CreateSingleConversationRequest::set_allocated_conversation_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.conversation_name_.IsDefault()) {
    _impl_.conversation_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CreateSingleConversationRequest.conversation_name)
}

// -------------------------------------------------------------------

// CreateSingleConversationResponse

// string conversation_id = 1;
inline void CreateSingleConversationResponse::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_.ClearToEmpty();
}
inline const std::string& CreateSingleConversationResponse::conversation_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CreateSingleConversationResponse.conversation_id)
  return _internal_conversation_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateSingleConversationResponse::set_conversation_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CreateSingleConversationResponse.conversation_id)
}
inline std::string* CreateSingleConversationResponse::mutable_conversation_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_conversation_id();
  // @@protoc_insertion_point(field_mutable:CreateSingleConversationResponse.conversation_id)
  return _s;
}
inline const std::string& CreateSingleConversationResponse::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_.Get();
}
inline void CreateSingleConversationResponse::_internal_set_conversation_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_.Set(value, GetArena());
}
inline std::string* CreateSingleConversationResponse::_internal_mutable_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.conversation_id_.Mutable( GetArena());
}
inline std::string* CreateSingleConversationResponse::release_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CreateSingleConversationResponse.conversation_id)
  return _impl_.conversation_id_.Release();
}
inline void CreateSingleConversationResponse::set_allocated_conversation_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.conversation_id_.IsDefault()) {
    _impl_.conversation_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CreateSingleConversationResponse.conversation_id)
}

// .ErrorCode error_code = 2;
inline void CreateSingleConversationResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = 0;
}
inline ::ErrorCode CreateSingleConversationResponse::error_code() const {
  // @@protoc_insertion_point(field_get:CreateSingleConversationResponse.error_code)
  return _internal_error_code();
}
inline void CreateSingleConversationResponse::set_error_code(::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:CreateSingleConversationResponse.error_code)
}
inline ::ErrorCode CreateSingleConversationResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ErrorCode>(_impl_.error_code_);
}
inline void CreateSingleConversationResponse::_internal_set_error_code(::ErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = value;
}

// -------------------------------------------------------------------

// CreateGroupConversationRequest

// string creator_user = 1;
inline void CreateGroupConversationRequest::clear_creator_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_user_.ClearToEmpty();
}
inline const std::string& CreateGroupConversationRequest::creator_user() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CreateGroupConversationRequest.creator_user)
  return _internal_creator_user();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateGroupConversationRequest::set_creator_user(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_user_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CreateGroupConversationRequest.creator_user)
}
inline std::string* CreateGroupConversationRequest::mutable_creator_user() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creator_user();
  // @@protoc_insertion_point(field_mutable:CreateGroupConversationRequest.creator_user)
  return _s;
}
inline const std::string& CreateGroupConversationRequest::_internal_creator_user() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creator_user_.Get();
}
inline void CreateGroupConversationRequest::_internal_set_creator_user(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_user_.Set(value, GetArena());
}
inline std::string* CreateGroupConversationRequest::_internal_mutable_creator_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creator_user_.Mutable( GetArena());
}
inline std::string* CreateGroupConversationRequest::release_creator_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CreateGroupConversationRequest.creator_user)
  return _impl_.creator_user_.Release();
}
inline void CreateGroupConversationRequest::set_allocated_creator_user(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_user_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creator_user_.IsDefault()) {
    _impl_.creator_user_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CreateGroupConversationRequest.creator_user)
}

// repeated string other_users = 2;
inline int CreateGroupConversationRequest::_internal_other_users_size() const {
  return _internal_other_users().size();
}
inline int CreateGroupConversationRequest::other_users_size() const {
  return _internal_other_users_size();
}
inline void CreateGroupConversationRequest::clear_other_users() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.other_users_.Clear();
}
inline std::string* CreateGroupConversationRequest::add_other_users() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_other_users()->Add();
  // @@protoc_insertion_point(field_add_mutable:CreateGroupConversationRequest.other_users)
  return _s;
}
inline const std::string& CreateGroupConversationRequest::other_users(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CreateGroupConversationRequest.other_users)
  return _internal_other_users().Get(index);
}
inline std::string* CreateGroupConversationRequest::mutable_other_users(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CreateGroupConversationRequest.other_users)
  return _internal_mutable_other_users()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CreateGroupConversationRequest::set_other_users(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_other_users()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:CreateGroupConversationRequest.other_users)
}
template <typename Arg_, typename... Args_>
inline void CreateGroupConversationRequest::add_other_users(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_other_users(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:CreateGroupConversationRequest.other_users)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CreateGroupConversationRequest::other_users() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CreateGroupConversationRequest.other_users)
  return _internal_other_users();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CreateGroupConversationRequest::mutable_other_users() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CreateGroupConversationRequest.other_users)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_other_users();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CreateGroupConversationRequest::_internal_other_users() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.other_users_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CreateGroupConversationRequest::_internal_mutable_other_users() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.other_users_;
}

// -------------------------------------------------------------------

// CreateGroupConversationResponse

// string conversation_id = 1;
inline void CreateGroupConversationResponse::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_.ClearToEmpty();
}
inline const std::string& CreateGroupConversationResponse::conversation_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CreateGroupConversationResponse.conversation_id)
  return _internal_conversation_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateGroupConversationResponse::set_conversation_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CreateGroupConversationResponse.conversation_id)
}
inline std::string* CreateGroupConversationResponse::mutable_conversation_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_conversation_id();
  // @@protoc_insertion_point(field_mutable:CreateGroupConversationResponse.conversation_id)
  return _s;
}
inline const std::string& CreateGroupConversationResponse::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_.Get();
}
inline void CreateGroupConversationResponse::_internal_set_conversation_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_.Set(value, GetArena());
}
inline std::string* CreateGroupConversationResponse::_internal_mutable_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.conversation_id_.Mutable( GetArena());
}
inline std::string* CreateGroupConversationResponse::release_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CreateGroupConversationResponse.conversation_id)
  return _impl_.conversation_id_.Release();
}
inline void CreateGroupConversationResponse::set_allocated_conversation_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.conversation_id_.IsDefault()) {
    _impl_.conversation_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CreateGroupConversationResponse.conversation_id)
}

// .ErrorCode error_code = 2;
inline void CreateGroupConversationResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = 0;
}
inline ::ErrorCode CreateGroupConversationResponse::error_code() const {
  // @@protoc_insertion_point(field_get:CreateGroupConversationResponse.error_code)
  return _internal_error_code();
}
inline void CreateGroupConversationResponse::set_error_code(::ErrorCode value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:CreateGroupConversationResponse.error_code)
}
inline ::ErrorCode CreateGroupConversationResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ErrorCode>(_impl_.error_code_);
}
inline void CreateGroupConversationResponse::_internal_set_error_code(::ErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = value;
}

// -------------------------------------------------------------------

// DeleteConversationRequest

// -------------------------------------------------------------------

// DeleteConversationResponse

// -------------------------------------------------------------------

// GetRecentConversationsRequest

// -------------------------------------------------------------------

// GetRecentConversationsResponse

// -------------------------------------------------------------------

// Request

// .CreateSingleConversationRequest create_single_conversation_request = 1;
inline bool Request::has_create_single_conversation_request() const {
  return request_type_case() == kCreateSingleConversationRequest;
}
inline bool Request::_internal_has_create_single_conversation_request() const {
  return request_type_case() == kCreateSingleConversationRequest;
}
inline void Request::set_has_create_single_conversation_request() {
  _impl_._oneof_case_[0] = kCreateSingleConversationRequest;
}
inline void Request::clear_create_single_conversation_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kCreateSingleConversationRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.create_single_conversation_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.create_single_conversation_request_);
    }
    clear_has_request_type();
  }
}
inline ::CreateSingleConversationRequest* Request::release_create_single_conversation_request() {
  // @@protoc_insertion_point(field_release:Request.create_single_conversation_request)
  if (request_type_case() == kCreateSingleConversationRequest) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.create_single_conversation_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_type_.create_single_conversation_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CreateSingleConversationRequest& Request::_internal_create_single_conversation_request() const {
  return request_type_case() == kCreateSingleConversationRequest ? *_impl_.request_type_.create_single_conversation_request_ : reinterpret_cast<::CreateSingleConversationRequest&>(::_CreateSingleConversationRequest_default_instance_);
}
inline const ::CreateSingleConversationRequest& Request::create_single_conversation_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Request.create_single_conversation_request)
  return _internal_create_single_conversation_request();
}
inline ::CreateSingleConversationRequest* Request::unsafe_arena_release_create_single_conversation_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Request.create_single_conversation_request)
  if (request_type_case() == kCreateSingleConversationRequest) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.create_single_conversation_request_;
    _impl_.request_type_.create_single_conversation_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_create_single_conversation_request(::CreateSingleConversationRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request_type();
  if (value) {
    set_has_create_single_conversation_request();
    _impl_.request_type_.create_single_conversation_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Request.create_single_conversation_request)
}
inline ::CreateSingleConversationRequest* Request::_internal_mutable_create_single_conversation_request() {
  if (request_type_case() != kCreateSingleConversationRequest) {
    clear_request_type();
    set_has_create_single_conversation_request();
    _impl_.request_type_.create_single_conversation_request_ =
        ::google::protobuf::Message::DefaultConstruct<::CreateSingleConversationRequest>(GetArena());
  }
  return _impl_.request_type_.create_single_conversation_request_;
}
inline ::CreateSingleConversationRequest* Request::mutable_create_single_conversation_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::CreateSingleConversationRequest* _msg = _internal_mutable_create_single_conversation_request();
  // @@protoc_insertion_point(field_mutable:Request.create_single_conversation_request)
  return _msg;
}

// .CreateGroupConversationRequest create_group_convertsation_request = 2;
inline bool Request::has_create_group_convertsation_request() const {
  return request_type_case() == kCreateGroupConvertsationRequest;
}
inline bool Request::_internal_has_create_group_convertsation_request() const {
  return request_type_case() == kCreateGroupConvertsationRequest;
}
inline void Request::set_has_create_group_convertsation_request() {
  _impl_._oneof_case_[0] = kCreateGroupConvertsationRequest;
}
inline void Request::clear_create_group_convertsation_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kCreateGroupConvertsationRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.create_group_convertsation_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.create_group_convertsation_request_);
    }
    clear_has_request_type();
  }
}
inline ::CreateGroupConversationRequest* Request::release_create_group_convertsation_request() {
  // @@protoc_insertion_point(field_release:Request.create_group_convertsation_request)
  if (request_type_case() == kCreateGroupConvertsationRequest) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.create_group_convertsation_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_type_.create_group_convertsation_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CreateGroupConversationRequest& Request::_internal_create_group_convertsation_request() const {
  return request_type_case() == kCreateGroupConvertsationRequest ? *_impl_.request_type_.create_group_convertsation_request_ : reinterpret_cast<::CreateGroupConversationRequest&>(::_CreateGroupConversationRequest_default_instance_);
}
inline const ::CreateGroupConversationRequest& Request::create_group_convertsation_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Request.create_group_convertsation_request)
  return _internal_create_group_convertsation_request();
}
inline ::CreateGroupConversationRequest* Request::unsafe_arena_release_create_group_convertsation_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Request.create_group_convertsation_request)
  if (request_type_case() == kCreateGroupConvertsationRequest) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.create_group_convertsation_request_;
    _impl_.request_type_.create_group_convertsation_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_create_group_convertsation_request(::CreateGroupConversationRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request_type();
  if (value) {
    set_has_create_group_convertsation_request();
    _impl_.request_type_.create_group_convertsation_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Request.create_group_convertsation_request)
}
inline ::CreateGroupConversationRequest* Request::_internal_mutable_create_group_convertsation_request() {
  if (request_type_case() != kCreateGroupConvertsationRequest) {
    clear_request_type();
    set_has_create_group_convertsation_request();
    _impl_.request_type_.create_group_convertsation_request_ =
        ::google::protobuf::Message::DefaultConstruct<::CreateGroupConversationRequest>(GetArena());
  }
  return _impl_.request_type_.create_group_convertsation_request_;
}
inline ::CreateGroupConversationRequest* Request::mutable_create_group_convertsation_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::CreateGroupConversationRequest* _msg = _internal_mutable_create_group_convertsation_request();
  // @@protoc_insertion_point(field_mutable:Request.create_group_convertsation_request)
  return _msg;
}

// .DeleteConversationRequest delete_conversation_request = 3;
inline bool Request::has_delete_conversation_request() const {
  return request_type_case() == kDeleteConversationRequest;
}
inline bool Request::_internal_has_delete_conversation_request() const {
  return request_type_case() == kDeleteConversationRequest;
}
inline void Request::set_has_delete_conversation_request() {
  _impl_._oneof_case_[0] = kDeleteConversationRequest;
}
inline void Request::clear_delete_conversation_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kDeleteConversationRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.delete_conversation_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.delete_conversation_request_);
    }
    clear_has_request_type();
  }
}
inline ::DeleteConversationRequest* Request::release_delete_conversation_request() {
  // @@protoc_insertion_point(field_release:Request.delete_conversation_request)
  if (request_type_case() == kDeleteConversationRequest) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.delete_conversation_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_type_.delete_conversation_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::DeleteConversationRequest& Request::_internal_delete_conversation_request() const {
  return request_type_case() == kDeleteConversationRequest ? *_impl_.request_type_.delete_conversation_request_ : reinterpret_cast<::DeleteConversationRequest&>(::_DeleteConversationRequest_default_instance_);
}
inline const ::DeleteConversationRequest& Request::delete_conversation_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Request.delete_conversation_request)
  return _internal_delete_conversation_request();
}
inline ::DeleteConversationRequest* Request::unsafe_arena_release_delete_conversation_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Request.delete_conversation_request)
  if (request_type_case() == kDeleteConversationRequest) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.delete_conversation_request_;
    _impl_.request_type_.delete_conversation_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_delete_conversation_request(::DeleteConversationRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request_type();
  if (value) {
    set_has_delete_conversation_request();
    _impl_.request_type_.delete_conversation_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Request.delete_conversation_request)
}
inline ::DeleteConversationRequest* Request::_internal_mutable_delete_conversation_request() {
  if (request_type_case() != kDeleteConversationRequest) {
    clear_request_type();
    set_has_delete_conversation_request();
    _impl_.request_type_.delete_conversation_request_ =
        ::google::protobuf::Message::DefaultConstruct<::DeleteConversationRequest>(GetArena());
  }
  return _impl_.request_type_.delete_conversation_request_;
}
inline ::DeleteConversationRequest* Request::mutable_delete_conversation_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::DeleteConversationRequest* _msg = _internal_mutable_delete_conversation_request();
  // @@protoc_insertion_point(field_mutable:Request.delete_conversation_request)
  return _msg;
}

// .GetRecentConversationsRequest get_recent_convertsations_request = 4;
inline bool Request::has_get_recent_convertsations_request() const {
  return request_type_case() == kGetRecentConvertsationsRequest;
}
inline bool Request::_internal_has_get_recent_convertsations_request() const {
  return request_type_case() == kGetRecentConvertsationsRequest;
}
inline void Request::set_has_get_recent_convertsations_request() {
  _impl_._oneof_case_[0] = kGetRecentConvertsationsRequest;
}
inline void Request::clear_get_recent_convertsations_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kGetRecentConvertsationsRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.get_recent_convertsations_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.get_recent_convertsations_request_);
    }
    clear_has_request_type();
  }
}
inline ::GetRecentConversationsRequest* Request::release_get_recent_convertsations_request() {
  // @@protoc_insertion_point(field_release:Request.get_recent_convertsations_request)
  if (request_type_case() == kGetRecentConvertsationsRequest) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.get_recent_convertsations_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_type_.get_recent_convertsations_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::GetRecentConversationsRequest& Request::_internal_get_recent_convertsations_request() const {
  return request_type_case() == kGetRecentConvertsationsRequest ? *_impl_.request_type_.get_recent_convertsations_request_ : reinterpret_cast<::GetRecentConversationsRequest&>(::_GetRecentConversationsRequest_default_instance_);
}
inline const ::GetRecentConversationsRequest& Request::get_recent_convertsations_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Request.get_recent_convertsations_request)
  return _internal_get_recent_convertsations_request();
}
inline ::GetRecentConversationsRequest* Request::unsafe_arena_release_get_recent_convertsations_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Request.get_recent_convertsations_request)
  if (request_type_case() == kGetRecentConvertsationsRequest) {
    clear_has_request_type();
    auto* temp = _impl_.request_type_.get_recent_convertsations_request_;
    _impl_.request_type_.get_recent_convertsations_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_get_recent_convertsations_request(::GetRecentConversationsRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request_type();
  if (value) {
    set_has_get_recent_convertsations_request();
    _impl_.request_type_.get_recent_convertsations_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Request.get_recent_convertsations_request)
}
inline ::GetRecentConversationsRequest* Request::_internal_mutable_get_recent_convertsations_request() {
  if (request_type_case() != kGetRecentConvertsationsRequest) {
    clear_request_type();
    set_has_get_recent_convertsations_request();
    _impl_.request_type_.get_recent_convertsations_request_ =
        ::google::protobuf::Message::DefaultConstruct<::GetRecentConversationsRequest>(GetArena());
  }
  return _impl_.request_type_.get_recent_convertsations_request_;
}
inline ::GetRecentConversationsRequest* Request::mutable_get_recent_convertsations_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::GetRecentConversationsRequest* _msg = _internal_mutable_get_recent_convertsations_request();
  // @@protoc_insertion_point(field_mutable:Request.get_recent_convertsations_request)
  return _msg;
}

inline bool Request::has_request_type() const {
  return request_type_case() != REQUEST_TYPE_NOT_SET;
}
inline void Request::clear_has_request_type() {
  _impl_._oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}
inline Request::RequestTypeCase Request::request_type_case() const {
  return Request::RequestTypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Response

// .CreateSingleConversationResponse create_single_conversation_response = 1;
inline bool Response::has_create_single_conversation_response() const {
  return response_type_case() == kCreateSingleConversationResponse;
}
inline bool Response::_internal_has_create_single_conversation_response() const {
  return response_type_case() == kCreateSingleConversationResponse;
}
inline void Response::set_has_create_single_conversation_response() {
  _impl_._oneof_case_[0] = kCreateSingleConversationResponse;
}
inline void Response::clear_create_single_conversation_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kCreateSingleConversationResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.create_single_conversation_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.create_single_conversation_response_);
    }
    clear_has_response_type();
  }
}
inline ::CreateSingleConversationResponse* Response::release_create_single_conversation_response() {
  // @@protoc_insertion_point(field_release:Response.create_single_conversation_response)
  if (response_type_case() == kCreateSingleConversationResponse) {
    clear_has_response_type();
    auto* temp = _impl_.response_type_.create_single_conversation_response_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_type_.create_single_conversation_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CreateSingleConversationResponse& Response::_internal_create_single_conversation_response() const {
  return response_type_case() == kCreateSingleConversationResponse ? *_impl_.response_type_.create_single_conversation_response_ : reinterpret_cast<::CreateSingleConversationResponse&>(::_CreateSingleConversationResponse_default_instance_);
}
inline const ::CreateSingleConversationResponse& Response::create_single_conversation_response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Response.create_single_conversation_response)
  return _internal_create_single_conversation_response();
}
inline ::CreateSingleConversationResponse* Response::unsafe_arena_release_create_single_conversation_response() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Response.create_single_conversation_response)
  if (response_type_case() == kCreateSingleConversationResponse) {
    clear_has_response_type();
    auto* temp = _impl_.response_type_.create_single_conversation_response_;
    _impl_.response_type_.create_single_conversation_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Response::unsafe_arena_set_allocated_create_single_conversation_response(::CreateSingleConversationResponse* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response_type();
  if (value) {
    set_has_create_single_conversation_response();
    _impl_.response_type_.create_single_conversation_response_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Response.create_single_conversation_response)
}
inline ::CreateSingleConversationResponse* Response::_internal_mutable_create_single_conversation_response() {
  if (response_type_case() != kCreateSingleConversationResponse) {
    clear_response_type();
    set_has_create_single_conversation_response();
    _impl_.response_type_.create_single_conversation_response_ =
        ::google::protobuf::Message::DefaultConstruct<::CreateSingleConversationResponse>(GetArena());
  }
  return _impl_.response_type_.create_single_conversation_response_;
}
inline ::CreateSingleConversationResponse* Response::mutable_create_single_conversation_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::CreateSingleConversationResponse* _msg = _internal_mutable_create_single_conversation_response();
  // @@protoc_insertion_point(field_mutable:Response.create_single_conversation_response)
  return _msg;
}

// .CreateGroupConversationResponse create_group_conversation_response = 2;
inline bool Response::has_create_group_conversation_response() const {
  return response_type_case() == kCreateGroupConversationResponse;
}
inline bool Response::_internal_has_create_group_conversation_response() const {
  return response_type_case() == kCreateGroupConversationResponse;
}
inline void Response::set_has_create_group_conversation_response() {
  _impl_._oneof_case_[0] = kCreateGroupConversationResponse;
}
inline void Response::clear_create_group_conversation_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kCreateGroupConversationResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.create_group_conversation_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.create_group_conversation_response_);
    }
    clear_has_response_type();
  }
}
inline ::CreateGroupConversationResponse* Response::release_create_group_conversation_response() {
  // @@protoc_insertion_point(field_release:Response.create_group_conversation_response)
  if (response_type_case() == kCreateGroupConversationResponse) {
    clear_has_response_type();
    auto* temp = _impl_.response_type_.create_group_conversation_response_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_type_.create_group_conversation_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CreateGroupConversationResponse& Response::_internal_create_group_conversation_response() const {
  return response_type_case() == kCreateGroupConversationResponse ? *_impl_.response_type_.create_group_conversation_response_ : reinterpret_cast<::CreateGroupConversationResponse&>(::_CreateGroupConversationResponse_default_instance_);
}
inline const ::CreateGroupConversationResponse& Response::create_group_conversation_response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Response.create_group_conversation_response)
  return _internal_create_group_conversation_response();
}
inline ::CreateGroupConversationResponse* Response::unsafe_arena_release_create_group_conversation_response() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Response.create_group_conversation_response)
  if (response_type_case() == kCreateGroupConversationResponse) {
    clear_has_response_type();
    auto* temp = _impl_.response_type_.create_group_conversation_response_;
    _impl_.response_type_.create_group_conversation_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Response::unsafe_arena_set_allocated_create_group_conversation_response(::CreateGroupConversationResponse* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response_type();
  if (value) {
    set_has_create_group_conversation_response();
    _impl_.response_type_.create_group_conversation_response_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Response.create_group_conversation_response)
}
inline ::CreateGroupConversationResponse* Response::_internal_mutable_create_group_conversation_response() {
  if (response_type_case() != kCreateGroupConversationResponse) {
    clear_response_type();
    set_has_create_group_conversation_response();
    _impl_.response_type_.create_group_conversation_response_ =
        ::google::protobuf::Message::DefaultConstruct<::CreateGroupConversationResponse>(GetArena());
  }
  return _impl_.response_type_.create_group_conversation_response_;
}
inline ::CreateGroupConversationResponse* Response::mutable_create_group_conversation_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::CreateGroupConversationResponse* _msg = _internal_mutable_create_group_conversation_response();
  // @@protoc_insertion_point(field_mutable:Response.create_group_conversation_response)
  return _msg;
}

// .DeleteConversationResponse delete_conversation_response = 3;
inline bool Response::has_delete_conversation_response() const {
  return response_type_case() == kDeleteConversationResponse;
}
inline bool Response::_internal_has_delete_conversation_response() const {
  return response_type_case() == kDeleteConversationResponse;
}
inline void Response::set_has_delete_conversation_response() {
  _impl_._oneof_case_[0] = kDeleteConversationResponse;
}
inline void Response::clear_delete_conversation_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kDeleteConversationResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.delete_conversation_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.delete_conversation_response_);
    }
    clear_has_response_type();
  }
}
inline ::DeleteConversationResponse* Response::release_delete_conversation_response() {
  // @@protoc_insertion_point(field_release:Response.delete_conversation_response)
  if (response_type_case() == kDeleteConversationResponse) {
    clear_has_response_type();
    auto* temp = _impl_.response_type_.delete_conversation_response_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_type_.delete_conversation_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::DeleteConversationResponse& Response::_internal_delete_conversation_response() const {
  return response_type_case() == kDeleteConversationResponse ? *_impl_.response_type_.delete_conversation_response_ : reinterpret_cast<::DeleteConversationResponse&>(::_DeleteConversationResponse_default_instance_);
}
inline const ::DeleteConversationResponse& Response::delete_conversation_response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Response.delete_conversation_response)
  return _internal_delete_conversation_response();
}
inline ::DeleteConversationResponse* Response::unsafe_arena_release_delete_conversation_response() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Response.delete_conversation_response)
  if (response_type_case() == kDeleteConversationResponse) {
    clear_has_response_type();
    auto* temp = _impl_.response_type_.delete_conversation_response_;
    _impl_.response_type_.delete_conversation_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Response::unsafe_arena_set_allocated_delete_conversation_response(::DeleteConversationResponse* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response_type();
  if (value) {
    set_has_delete_conversation_response();
    _impl_.response_type_.delete_conversation_response_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Response.delete_conversation_response)
}
inline ::DeleteConversationResponse* Response::_internal_mutable_delete_conversation_response() {
  if (response_type_case() != kDeleteConversationResponse) {
    clear_response_type();
    set_has_delete_conversation_response();
    _impl_.response_type_.delete_conversation_response_ =
        ::google::protobuf::Message::DefaultConstruct<::DeleteConversationResponse>(GetArena());
  }
  return _impl_.response_type_.delete_conversation_response_;
}
inline ::DeleteConversationResponse* Response::mutable_delete_conversation_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::DeleteConversationResponse* _msg = _internal_mutable_delete_conversation_response();
  // @@protoc_insertion_point(field_mutable:Response.delete_conversation_response)
  return _msg;
}

// .GetRecentConversationsResponse get_recent_convertsations_response = 4;
inline bool Response::has_get_recent_convertsations_response() const {
  return response_type_case() == kGetRecentConvertsationsResponse;
}
inline bool Response::_internal_has_get_recent_convertsations_response() const {
  return response_type_case() == kGetRecentConvertsationsResponse;
}
inline void Response::set_has_get_recent_convertsations_response() {
  _impl_._oneof_case_[0] = kGetRecentConvertsationsResponse;
}
inline void Response::clear_get_recent_convertsations_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kGetRecentConvertsationsResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.get_recent_convertsations_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.get_recent_convertsations_response_);
    }
    clear_has_response_type();
  }
}
inline ::GetRecentConversationsResponse* Response::release_get_recent_convertsations_response() {
  // @@protoc_insertion_point(field_release:Response.get_recent_convertsations_response)
  if (response_type_case() == kGetRecentConvertsationsResponse) {
    clear_has_response_type();
    auto* temp = _impl_.response_type_.get_recent_convertsations_response_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_type_.get_recent_convertsations_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::GetRecentConversationsResponse& Response::_internal_get_recent_convertsations_response() const {
  return response_type_case() == kGetRecentConvertsationsResponse ? *_impl_.response_type_.get_recent_convertsations_response_ : reinterpret_cast<::GetRecentConversationsResponse&>(::_GetRecentConversationsResponse_default_instance_);
}
inline const ::GetRecentConversationsResponse& Response::get_recent_convertsations_response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Response.get_recent_convertsations_response)
  return _internal_get_recent_convertsations_response();
}
inline ::GetRecentConversationsResponse* Response::unsafe_arena_release_get_recent_convertsations_response() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Response.get_recent_convertsations_response)
  if (response_type_case() == kGetRecentConvertsationsResponse) {
    clear_has_response_type();
    auto* temp = _impl_.response_type_.get_recent_convertsations_response_;
    _impl_.response_type_.get_recent_convertsations_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Response::unsafe_arena_set_allocated_get_recent_convertsations_response(::GetRecentConversationsResponse* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response_type();
  if (value) {
    set_has_get_recent_convertsations_response();
    _impl_.response_type_.get_recent_convertsations_response_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Response.get_recent_convertsations_response)
}
inline ::GetRecentConversationsResponse* Response::_internal_mutable_get_recent_convertsations_response() {
  if (response_type_case() != kGetRecentConvertsationsResponse) {
    clear_response_type();
    set_has_get_recent_convertsations_response();
    _impl_.response_type_.get_recent_convertsations_response_ =
        ::google::protobuf::Message::DefaultConstruct<::GetRecentConversationsResponse>(GetArena());
  }
  return _impl_.response_type_.get_recent_convertsations_response_;
}
inline ::GetRecentConversationsResponse* Response::mutable_get_recent_convertsations_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::GetRecentConversationsResponse* _msg = _internal_mutable_get_recent_convertsations_response();
  // @@protoc_insertion_point(field_mutable:Response.get_recent_convertsations_response)
  return _msg;
}

inline bool Response::has_response_type() const {
  return response_type_case() != RESPONSE_TYPE_NOT_SET;
}
inline void Response::clear_has_response_type() {
  _impl_._oneof_case_[0] = RESPONSE_TYPE_NOT_SET;
}
inline Response::ResponseTypeCase Response::response_type_case() const {
  return Response::ResponseTypeCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ErrorCode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ErrorCode>() {
  return ::ErrorCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // protobuf_2fconversation_2eproto_2epb_2eh
